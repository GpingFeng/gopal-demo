const schedule = require('node-schedule');

// 当前时间的秒值为 10 时执行任务，如：2018-7-8 13:25:10
let job = schedule.scheduleJob('0 0 22 ? * sun', () => {
  console.log(new Date());
});

// Cron 表达式语法简介
// Cron表达式是一个字符串，字符串以5或6个空格隔开，分为6或7个域，每一个域代表一个含义
// *  *  *  *  *  *
// ┬  ┬  ┬  ┬  ┬  ┬
// │  │  │  │  │  |
// │  │  │  │  │  └ 星期几，取值：0 - 7，其中 0 和 7 都表示是周日
// │  │  │  │  └─── 月份，取值：1 - 12
// │  │  │  └────── 日期，取值：1 - 31
// │  │  └───────── 时，取值：0 - 23
// │  └──────────── 分，取值：0 - 59
// └─────────────── 秒，取值：0 - 59（可选）


// 然后那个星号代表什么呢？
// 代表所有可能的值。在月域中，*表示每个月；在星期域中，*表示星期的每一天。
// 每周日10点执行一个定时任务：0 0 22 * * sun
// 0 0 12 ? * wed 每个星期三中午12:00执行任务


// 发现它这个日期使用的是问号，那这个又代表什么呢？
// 它代表着：不指定值，仅日期和星期域支持该字符。
// 当日期或星期域其中之一被指定了值以后，为了避免冲突，需要将另一个域的值设为?。


// 举个例子：
// 要在每月的 20 号触发调度
// 不管每个月的 20 号是星期几，则只能使用如下写法：13 13 15 20 * ?。
// 其中，因为日期域已经指定了 20 号，最后一位星期域只能用 ?，不能使用 *。
// 如果最后一位使用 *，则表示不管星期几都会触发，与日期域的 20 号相斥，此时表达式不正确。


